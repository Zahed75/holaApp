openapi: 3.0.3
info:
  title: HolaGO MultiPlatform Ecommerce Solution by-Zahed Hasan
  version: 1.0.0
  description: Your project description
paths:
  /auth/api/register-phone/:
    post:
      operationId: auth_api_register_phone_create
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/api/resendOtp/:
    post:
      operationId: auth_api_resendOtp_create
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/api/token/refresh/:
    post:
      operationId: auth_api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/api/token/verify/:
    post:
      operationId: auth_api_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /auth/api/tokenPair/:
    post:
      operationId: auth_api_tokenPair_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/api/verify-otp/:
    post:
      operationId: auth_api_verify_otp_create
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /category/api/addCategory:
    post:
      operationId: category_api_addCategory_create
      tags:
      - category
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /category/api/delete-category/{id}:
    delete:
      operationId: category_api_delete_category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - category
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /category/api/editCategory/{id}:
    put:
      operationId: category_api_editCategory_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - category
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /category/api/get-CategoryList:
    get:
      operationId: category_api_get_CategoryList_retrieve
      tags:
      - category
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /category/api/getCategoryById/{id}:
    get:
      operationId: category_api_getCategoryById_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - category
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /category/api/getCategoryByName/{categoryName}:
    get:
      operationId: category_api_getCategoryByName_retrieve
      parameters:
      - in: path
        name: categoryName
        schema:
          type: string
        required: true
      tags:
      - category
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /outlet/api/create-outlet:
    post:
      operationId: outlet_api_create_outlet_create
      tags:
      - outlet
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /outlet/api/delete-outlet/{id}:
    delete:
      operationId: outlet_api_delete_outlet_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - outlet
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /outlet/api/get-all-outlets/:
    get:
      operationId: outlet_api_get_all_outlets_retrieve
      tags:
      - outlet
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /outlet/api/get-outlet/{id}:
    get:
      operationId: outlet_api_get_outlet_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - outlet
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /outlet/api/update-outlet/{id}:
    put:
      operationId: outlet_api_update_outlet_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - outlet
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /products/api/addInventoryByProductId/{id}:
    post:
      operationId: products_api_addInventoryByProductId_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /products/api/addProduct:
    post:
      operationId: products_api_addProduct_create
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /products/api/deleteInventoryByProductId/{id}:
    delete:
      operationId: products_api_deleteInventoryByProductId_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /products/api/deleteProduct/{id}:
    delete:
      operationId: products_api_deleteProduct_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /products/api/editInventoryByProductId/{id}:
    put:
      operationId: products_api_editInventoryByProductId_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /products/api/editProduct/{id}:
    put:
      operationId: products_api_editProduct_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /products/api/get-allProducts:
    get:
      operationId: products_api_get_allProducts_retrieve
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /products/api/get-products/{id}:
    get:
      operationId: products_api_get_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
